import numpy as np

# 创建一个一维数组，形状为 (6,)
array = np.array([1, 2, 3, 4, 5, 6])
# 通过索引访问数组中的元素，正向索引和反向索引都可以使用
# 正向索引表示从数组的第一个元素开始，索引值为正数，索引值从 0 开始
print(array[0])
# 反向索引表示从数组的最后一个元素开始，索引值为负数，索引值从 -1 开始
print(array[-1])
# 通过索引修改数组中的元素，正向索引和反向索引都可以使用
# 将第一个元素修改为 100，将最后一个元素修改为 101
array[0] = 100
array[-1] = 101
print(array)

# 创建一个二维数组，形状为 (2, 3)
array_2d = array.reshape((2, 3))
print(array_2d)
# 通过索引访问数组中的元素，第一个索引表示行，第二个索引表示列
print(array_2d[1][2])
# 通过索引修改数组中的元素，将第一个元素修改为 200
array_2d[0][0] = 200
print(array_2d)

# 切片操作
# 通过切片操作可以访问数组中的多个元素
# 切片操作的语法为 array[start:stop:step]，start 表示起始索引，stop 表示结束索引，step 表示步长
array_1 = array[1:3]
print(array_1)

# 创建一个一维数组，元素从 1 开始，到 10 结束，步长为 1
array_2 = np.arange(1, 10)
# 将数组的形状修改为 (3, 3)，即将数组转换为一个二维数组
# reshape 函数会返回一个新的数组，不会对原数组进行修改
array_3 = array_2.reshape((3, 3))
print(array_3)
# 通过切片操作访问数组中的多个元素
# 第一个索引表示行，第二个索引表示列，第一个索引的范围是 [0, 2)，第二个索引的范围是 [1, 3)
array_4 = array_3[0:2, 1:3]
print(array_4)